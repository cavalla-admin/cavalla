<?php

/**
 * @file
 * cavalla_page module file.
 */

use \Drupal\block\Entity\Block;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\cavalla\Entity\Cavalla;
use Drupal\cavalla_page\Entity\CavallaPage;
use Drupal\Core\Url;
use Drupal\node\Entity\Node;





/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function cavalla_page_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.cavalla_page':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function cavalla_page_theme($existing, $type, $theme, $path) {
  return [
    'node__cavalla_page' => [
      'base hook' => 'node',
    ],

    'block__cavalla_theme_breadcrumbs' => [
      'base hook' => 'block',
    ],

  ];
}

function cavalla_page_preprocess_node__cavalla_page(array &$variables) {
  $node = $variables['elements']['#node'];
  $variables['page_title']= $node->getTitle();
  $variables['contents'] = CavallaPage::getInstance()->getValue($node->field_cavalla_page__site_blocks->getValue()) ?? [];
  $variables['grid_class'] = $node->field_cavalla_page__grid_sizes[0]->value ?? '';
}


